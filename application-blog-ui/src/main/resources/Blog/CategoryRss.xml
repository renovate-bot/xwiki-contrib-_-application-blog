<?xml version="1.1" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.4" reference="Blog.CategoryRss" locale="">
  <web>Blog</web>
  <name>CategoryRss</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1230080962000</creationDate>
  <parent>Blog.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1749827422000</date>
  <contentUpdateDate>1749827422000</contentUpdateDate>
  <version>1.1</version>
  <title>Blog category RSS Feed Generator</title>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{include reference="Blog.RssCode"/}}

{{include reference="Blog.CategoriesCode"/}}

{{velocity filter="none"}}
#if("$!{request.xpage}" == 'plain' || "$!{request.xpage}" == 'rdf')
$response.setContentType('application/rss+xml')
{{html clean="false" wiki="false"}}
##
##
##
#macro(getTargetCategory $categoryDoc)
  #set($category = "$!{request.category}")
  #if($category == '')
    #set ($categoryDoc = $doc)
    ## Since 9.15, category data may exist in Blog or Blog.Categories. Code supports both paths to maintain backward compatibility.
    ## This code checks whether a category exists in its original location (e.g., Blog.News).
    ## If the category is not found, it assumes a migration has occurred and automatically sets the category to its new location in the Blog.Categories namespace (e.g., Blog.Categories.News).
    #if (!$services.blog.hasLegacyCategoryAssignments())
      #set ($oldCategoryRef = $categoryDoc.documentReference)
      ## When accessing "Blog/News?xpage=plain&amp;sheet=Blog.CategoryRss" and the Blog.News document is missing, the current doc is Blog.News.WebHome and that needs to be translated into the migrated category Blog.Categories.News.
      #if ($oldCategoryRef.name == 'WebHome')
        #set ($oldCategoryRef = $categoryDoc.documentReference.parent)
      #end
      #set ($newCategoriesSpaceRef = $services.model.createSpaceReference('Categories', $oldCategoryRef.parent))
      #set ($newCategoryRef = $services.model.createDocumentReference($oldCategoryRef.name, $newCategoriesSpaceRef))
      #if ($xwiki.exists($newCategoryRef))
        #set ($categoryDoc = $xwiki.getDocument($newCategoryRef))
      #end
    #end
    #if("$!categoryDoc.getObject($blogCategoryClassname)" != '' || $categoryDoc.getObject('XWiki.DocumentSheetBinding').sheet == 'Blog.CategoriesSheet')
      #set ($category = $categoryDoc.fullName)
    #else
      #set($category = $defaultCategoryParent)
    #end
  #end
  #set ($categoryDoc = $NULL)
  #setVariable ("$categoryDoc" $xwiki.getDocument($category))
#end
#getTargetCategory($categoryDoc)
#set($tempCategoryDoc = $categoryDoc)
#getEntriesForCategory($tempCategoryDoc.fullName $entries $totalEntries)
#set($categoryDoc = $tempCategoryDoc)
#set($entries = $xwiki.wrapDocs($entries))
#displayBlogCategoryRss($categoryDoc $categoryDoc $entries)
{{/html}}
#end
{{/velocity}}</content>
</xwikidoc>
